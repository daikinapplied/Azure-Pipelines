# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# publish-dotnet
# Daikin Applied Americas Step Template
# Developed by Hans Dickel
# Repo daikinapplied/Azure-Pipelines
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops

parameters:
  DisplayName: 'Publish Dotnet'
  SourcePath: '.\'
  TargetPath: ''
  SourceFileMask: ''
  SqlServer: ''    # Optional
  SqlDatabase: ''  # Optional
  SqlFile: ''      # Optional
  Debug: 'no'

steps:
- task: PowerShell@2
  displayName: '${{ parameters.DisplayName }}'
  inputs:
    targetType: Inline
    script: |
      $scriptFolder = $PSScriptRoot
      $sourcePath = "${{ parameters.SourcePath }}"
      $targetPath = "${{ parameters.TargetPath }}"
      $sourceFileMask = "${{ parameters.SourceFileMask }}"
      $sqlServer = "${{ parameters.SqlServer }}"
      $sqlDatabase = "${{ parameters.SqlDatabase }}"
      $sqlFile = "${{ parameters.SqlFile }}"
      $debug = "${{ parameters.Debug }}"
      $isDebug = ($debug -eq '1' -or $debug -eq 'yes' -or $debug -eq 'true')
      
      If ($isDebug) {
        Write-Host
        Write-Host "PARAMETERS:"
        Write-Host "SourcePath: $sourcePath"
        Write-Host "TargetPath: $targetPath"
        Write-Host "Source File Mask: $sourceFileMask"
        Write-Host "SqlServer: $sqlServer"
        Write-Host "Database: $sqlDatabase"
        Write-Host "File: $sqlFile"
        Write-Host
        Write-Host "FOLDER INFORMATION:"
        $loc = Get-Location
        Write-Host "Startup Folder: $loc"
        Write-Host "Script Folder: $scriptFolder"     
      }

      Write-Host
      Write-Host "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      Write-Host "[Website Deployment]"

      If (Test-Path $targetPath) {
        # Create an app_offline.htm file on the target publish location - This takes the service offline (preventing file in use errors)
        Write-Host
        Write-Host "Taking existing site offline"
        New-Item "$targetPath\app_offline.htm" -Force -ItemType "file" -value "<html>Service offline for software update...</html>"
        Start-Sleep -s 3
      }

      # Optional
      If ($sqlServer.Length -gt 0 -and $sqlDatabase.Length -gt 0 -and $sqlFile.Length -gt 0) {
        Write-Host
        Write-Host "Updating SQL Server $sqlServer database $sqlDatabase"
        sqlcmd -S "$sqlServer" -d "$sqlDatabase" -E -i "$sqlFile"
      }

      Write-Host
      Write-Host "Copying files..."
      robocopy "$sourcePath" "$targetPath" "$sourceFileMask" /PURGE /S /XF app_offline.htm /XD logs /NP

      Write-Host
      Write-Host "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      Write-Host "[Cleanup]"

      If (Test-Path "$targetPath\app_offline.htm") {
        Write-Host
        Write-Host "Bring site online..."
        Remove-Item "$targetPath\app_offline.htm"
      }

      Exit 0

# ~End~
